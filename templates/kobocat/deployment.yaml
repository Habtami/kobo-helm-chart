apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kobo.fullname" . }}-kobocat
  labels:
    app.kubernetes.io/component: kobocat
    {{- include "kobo.labels" . | nindent 4 }}
spec:
  {{- if not .Values.kobocat.autoscaling.enabled }}
  replicas: {{ .Values.kobocat.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/component: kobocat
      {{- include "kobo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/kobocat/secrets.yaml") . | sha256sum }}
        checksum/configmap: {{ include (print $.Template.BasePath "/kobocat/configmap.yaml") . | sha256sum }}
        tag: "{{ .Values.kobocat.image.tag }}"
      labels:
        app.kubernetes.io/component: kobocat
        {{- include "kobo.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "kobo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: backend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.kobocat.image.repository }}:{{ .Values.kobocat.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.kobocat.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/v1/
              port: http
            initialDelaySeconds: 5
          resources:
            {{- toYaml .Values.kobocat.resources | nindent 12 }}
          envFrom:
            - secretRef:
                name: {{ include "kobo.fullname" . }}-kobocat
            - configMapRef:
                name: {{ include "kobo.fullname" . }}-kobocat
          command: ["/srv/init/run-uwsgi.sh"]
          volumeMounts:
          - name: scripts
            mountPath: /srv/init/
        - name: nginx
          image: {{ .Values.nginx.image }}
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 100m
              memory: 64Mi
            requests:
              cpu: 1m
              memory: 32Mi
          volumeMounts:
          - name: static-volume
            mountPath: /static
          - name: nginx-conf
            mountPath: /etc/nginx/conf.d/
          ports:
            - containerPort: 80
      initContainers:
        - name: init
          image: "{{ .Values.kobocat.image.repository }}:{{ .Values.kobocat.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.kobocat.image.pullPolicy }}
          command: ["/srv/init/init.sh"]
          volumeMounts:
          - name: static-volume
            mountPath: /static    
          - name: scripts
            mountPath: /srv/init/
          envFrom:
            - secretRef:
                name: {{ include "kobo.fullname" . }}-kobocat
            - configMapRef:
                name: {{ include "kobo.fullname" . }}-kobocat

      {{- with .Values.kobocat.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kobocat.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kobocat.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/component: kobocat
      volumes:
      - name: static-volume
        emptyDir: {}
      - name: scripts
        configMap:
          name: {{ include "kobo.fullname" . }}-kobocat-scripts
          defaultMode: 0777
          items:
          - key: run-uwsgi.sh
            path: run-uwsgi.sh
          - key: init.sh
            path: init.sh
      - name: nginx-conf
        configMap:
          name: {{ include "kobo.fullname" . }}-nginx-kobocat-conf
